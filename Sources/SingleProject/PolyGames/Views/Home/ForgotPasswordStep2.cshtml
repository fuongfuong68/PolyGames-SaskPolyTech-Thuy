@model ForgotPasswordModel
@{
    ViewBag.Title = "Forgot password step 2";
}

<h2 class="text-center">Forgot Password - Step 2</h2>
<div class="row">
    <div class="col-sm-12 col-md-3 col-lg-4"></div>
    <div class="col-sm-12 col-md-6 col-lg-4">
        @RenderPage("~/Views/Shared/_Notif.cshtml")
        <div class="card bg-dark">
            <div class="card-body">
                @using (Html.BeginForm("ForgotPasswordStep2", "Home", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <fieldset>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(m => m.Email, null, htmlAttributes: new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.VerificationCode, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.VerificationCode, new { htmlAttributes = new { @class = "form-control", @onchange = "checkValidationCode();" } })
                            @Html.ValidationMessageFor(m => m.VerificationCode, null, htmlAttributes: new { @class = "text-danger" })
                            <span id="checkVerifCode_Message" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(m => m.Password, null, htmlAttributes: new { @class = "text-danger" })
                        </div>
                        <button type="submit" id="submit_forgotPassword" class="btn btn-primary mt-2">Submit</button>
                    </fieldset>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-3 col-lg-4"></div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function checkValidationCode() {
            const xhr = new XMLHttpRequest();
            const url = '@Url.Action("CheckVerificationCode", "Home")';

            xhr.open('POST', url);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        const jsonObj = JSON.parse(xhr.response);
                        const checkVerifCode_Msg_Element = document.querySelector('#checkVerifCode_Message');
                        if (jsonObj.Status === 'NotMatched') {
                            document.querySelector('#submit_forgotPassword').disabled = true;
                            checkVerifCode_Msg_Element.innerText = 'Not matched';
                            checkVerifCode_Msg_Element.className = 'text-danger';
                        } else {
                            document.querySelector('#submit_forgotPassword').disabled = false;
                            checkVerifCode_Msg_Element.innerText = 'Matched';
                            checkVerifCode_Msg_Element.className = 'text-success';
                        }
                    } else {
                        const jsonObj = JSON.parse(xhr.response);
                        alert(jsonObj.Status);
                    }
                }
            };

            const code = document.querySelector("#VerificationCode").value;

            const formData = new FormData();
            formData.append('__RequestVerificationToken', '@Html.AntiForgeryTokenValue()');
            formData.append('code', code);

            const searchParams = new URLSearchParams(formData);
            const queryString = searchParams.toString();

            xhr.send(queryString);
        }
    </script>
}

