@model UpdatePasswordModel

<div class="card bg-dark">
    <div class="card-header">
        <p class="m-0">Change Password</p>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("UpdatePassword", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("ID", (int)ViewBag.MemberId)
            <div class="form-group">
                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label white-label" })
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.OldPassword, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label white-label" })
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.NewPassword, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RetypePassword, htmlAttributes: new { @class = "control-label white-label" })
                @Html.PasswordFor(model => model.RetypePassword, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.RetypePassword, null, htmlAttributes: new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-success">Submit</button>
            </div>
        }
    </div>
</div>